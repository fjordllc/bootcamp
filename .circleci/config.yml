version: 2.1

orbs:
  ruby: circleci/ruby@2.0.0
  node: circleci/node@5.1.0
jobs:
  build:
    docker:
      - image: cimg/ruby:3.1.6-node
    steps:
      - checkout
      - run:
          name: Configure Bundler
          command: |
            bundle config set --local force_ruby_platform true
            bundle lock --add-platform ruby
      - ruby/install-deps
      - node/install:
          install-yarn: true
          node-version: '20.9.0'
      - node/install-packages:
          pkg-manager: yarn
  check:
    docker:
      - image: 'cimg/ruby:3.1.6-node'
    steps:
      - checkout
      - run:
          name: Configure Bundler
          command: |
            bundle config set --local force_ruby_platform true
            bundle lock --add-platform ruby
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop
      - run:
          name: Slim Lint
          command: bundle exec slim-lint app/views -c config/slim_lint.yml
      - run:
          name: Update package list
          command: sudo apt-get update
      - run:
          name: Install libvips
          command: sudo apt-get install -y libvips
      - run:
          name: Traceroute
          command: FAIL_ON_ERROR=1 bundle exec rake traceroute
      - node/install:
          install-yarn: true
          node-version: '20.9.0'
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Lint
          command: bin/yarn lint
  test:
    docker:
      - image: cimg/ruby:3.1.6-browsers
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_test
      - image: cimg/postgres:14.10
    resource_class: large  # Reduced from xlarge for single test debugging
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: postgres
      PGPASSWORD: "postgres"
      RAILS_ENV: test
      DATABASE_URL: "postgres://postgres:postgres@localhost/ci_test"
      TZ: Asia/Tokyo
      PARALLEL_WORKERS: 1
      CI: true
    # parallelism: 1  # Disabled for single test debugging
    steps:
      - checkout
      - run:
          name: Setup Chrome
          command: |
            wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo apt install -y ./google-chrome-stable_current_amd64.deb
            rm google-chrome-stable_current_amd64.deb
      - run:
          name: Setup ChromeDriver
          command: |
            CHROME_VERSION=$(google-chrome --version | cut -d " " -f3)
            echo "Chrome version: $CHROME_VERSION"
            # Use Chrome for Testing API for M115+
            CHROMEDRIVER_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json" | \
              jq -r --arg version "$CHROME_VERSION" '.versions[] | select(.version == $version) | .downloads.chromedriver[] | select(.platform == "linux64") | .url' | head -1)
            if [ -z "$CHROMEDRIVER_URL" ]; then
              # Fallback to latest stable if exact version not found
              CHROMEDRIVER_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions.json" | \
                jq -r '.channels.Stable.downloads.chromedriver[] | select(.platform == "linux64") | .url')
            fi
            echo "ChromeDriver URL: $CHROMEDRIVER_URL"
            wget -O chromedriver.zip "$CHROMEDRIVER_URL"
            unzip chromedriver.zip
            sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
            sudo chmod +x /usr/local/bin/chromedriver
            rm -rf chromedriver.zip chromedriver-linux64
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      - run:
          name: Configure Bundler
          command: |
            bundle config set --local force_ruby_platform true
            bundle lock --add-platform ruby
      - ruby/install-deps:
          clean-bundle: true
      - node/install:
          install-yarn: true
          node-version: '20.9.0'
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y libvips
            sudo apt-get install -y fonts-noto-cjk-extra || sudo apt-get install -y fonts-noto-cjk || echo "Japanese font installation failed, proceeding without it"
      - run:
          name: Wait for DB
          command: 'dockerize -wait tcp://localhost:5432 -timeout 1m'
      - run:
          name: Database setup
          command: 'bundle exec rails db:setup'
      - run:
          name: Assets precompile
          command: 'bundle exec rails assets:clean assets:precompile'
      - run:
          name: Test (Single System Test for CONNECTION_REFUSED Debug)
          command: |
            # Test specific method from home_test.rb to debug CONNECTION_REFUSED
            timeout 10m bundle exec rails test test/system/home_test.rb -n test_GET_/_without_sign_in
          no_output_timeout: 15m
          when: always
      - store_test_results:
          path: test/reports
      - store_artifacts:
          path: tmp/screenshots
workflows:
  build_and_test:
    jobs:
      - build
      - check
      - test:
          requires:
            - build

# VS Code Extension Version: 1.5.1
