header.page-content-header
  #js-check-stamp(data-checkable-id="#{report.id}" data-checkable-type='Report')
  .page-content-header__start
    .page-content-header__user
      = render 'users/icon', user: report.user, link_class: 'page-content-header__user-link', image_class: 'page-content-header__user-icon'
    - if report.user.trainee?
      = link_to company_path(report.user.company) do
        = image_tag report.user.company.logo_url, class: 'page-content-header__company-logo'
  .page-content-header__end
    .page-content-header__row
      .page-content-header__before-title
        = link_to report.user, class: 'a-user-name' do
          = report.user.long_name
      h1.page-content-header__title(class="#{report.wip? ? 'is-wip' : ''}")
        - if report.emotion.present?
          span.page-content-header__emotion
            = image_tag Report.faces[report.emotion], id: report.emotion, alt: report.emotion, class: 'page-content-header__emotion-image'
        - if report.wip?
          span.a-title-label.is-wip
            | WIP
        | #{report.title}

    .page-content-header__row
      .page-content-header-metas
        .page-content-header-metas__start
          .page-content-header-metas__meta
            .a-meta
              = l report.reported_on
              | （
              span.a-meta__count(class="#{report.serial_number < 6 ? 'is-important' : ''}")
                = report.number
              | ）
              = 'の日報' unless report.first?
              - if report.published_at.present?
                .a-meta
                  | （#{l report.published_at} 提出）

        .page-content-header-metas__end
          .page-content-header-metas__meta
            - length = report.comments.length
            a.a-meta(href='#comments' class="#{length.zero? ? 'is-disabled' : ''}")
              | コメント（
              span(class="#{length.zero? ? 'is-muted' : 'is-emphasized'}")
                = length
              | ）

    .page-content-header__row
      .page-content-header-actions
        .page-content-header-actions__start
          .page-content-header-actions__action
            div(data-vue="WatchToggle" data-vue-watchable-id:number="#{report.id}" data-vue-watchable-type='Report')
          .page-content-header-actions__action
            = react_component('BookmarkButton', bookmarkableId: "#{report.id}", bookmarkableType: 'Report')
        .page-content-header-actions__end
          - if report.user_id == current_user.id
            .page-content-header-actions__action
              = link_to new_report_path(id: report), class: 'a-button is-sm is-secondary is-block', id: 'copy' do
                i.fa-solid.fa-copy
                | コピー
          .page-content-header-actions__action
            = link_to 'Raw', report_path(format: :md), class: 'a-button is-sm is-secondary is-block', target: '_blank', rel: 'noopener'

    - if report.practices.present?
      .page-content-header__row
        .page-content-header__tags
          .tag-links
            ul.tag-links__items
              - category_practices(report).each do |practice|
                li.tag-links__item
                  = link_to practice, class: 'tag-links__item-link' do
                    = practice.title
