.form-item
  - editors = %w[VSCode RubyMine Vim Emacs]
  = f.label :editor, class: 'a-form-label'
    = t('activerecord.attributes.user.editor')
  ul.block-checks.is-2-items
    - editors.each do |editor|
      li.block-checks__item
        .a-block-check.is-radio
          = f.radio_button :editor, editor, id: editor, class: 'a-toggle-checkbox'
          = f.label :editor, for: editor, class: 'a-block-check__label has-icon is-ta-left' do
            = editor
    - others_checked = user.editor.present? && editors.exclude?(user.editor)
    li.block-checks__item
      .a-block-check.is-radio
        = f.radio_button :editor, 'others', id: 'others', class: 'a-toggle-checkbox', checked: others_checked
        = f.label :editor, for: 'others', class: 'a-block-check__label has-icon is-ta-left' do
          = t('activerecord.attributes.editors.others')
.form-item#toggle-textbox
  label.a-form-label
    | その他のエディタを選択した場合、具体的なエディタ名を入力してください。
  = f.text_field :others_editor, placeholder: 'textbringer', id: 'others_editor', class: 'a-text-input', value: (user.editor if others_checked)

javascript:
  let othersEditorRadio = document.getElementById('others');
  let othersEditorInput = document.getElementById('others_editor');
  let toggleTextbox = document.getElementById('toggle-textbox');
  let form = document.getElementById('payment-form');

  function onChangeFunc() {
    if (othersEditorRadio.checked) {
      toggleTextbox.style.display = 'block';
    } else {
      toggleTextbox.style.display = 'none';
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    onChangeFunc();
    let radios = document.querySelectorAll('[name="user[editor]"]');
    radios.forEach(function(radio) {
      radio.addEventListener('change', onChangeFunc);
    });
  });

  form.addEventListener('submit', function() {
    if (othersEditorRadio.checked) {
      let othersEditorValue = othersEditorInput.value;
      let hiddenInput = document.createElement('input');
      hiddenInput.setAttribute('type', 'hidden');
      hiddenInput.setAttribute('name', 'user[editor]');
      hiddenInput.setAttribute('value', othersEditorValue);

      form.appendChild(hiddenInput);
    }
  });
