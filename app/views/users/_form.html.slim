= form_with model: user, url: url, local: true, html: { name: "user" } do |f|
  = f.hidden_field :adviser
  = render "errors", object: user
  .auth-form-items
    .auth-form-item
      // ユーザー名
      = f.label :login_name, class: "a-sm-label is-required"
      = f.text_field :login_name, class: "a-sm-text-input", autocomplete: :off, placeholder: "komagata"
      .auth-form-item__help
        p
          | チャットやSNS（Twitter、GitHub、ブログ など）でユーザー名が異なると個人を認識するのが困難になります。極力ユーザー名は統一するようにしてください。サービスによっては半角英数しか使えないサービスが多いので、半角英数をおすすめします。

    .auth-form-item
      // メールアドレス
      = f.label :email, class: "a-sm-label is-required"
      = f.text_field :email, class: "a-sm-text-input", placeholder: "komagata@fjord.jp"
      - unless user.adviser?
        .auth-form-item__help
          p
            | このメールアドレスは卒業後の連絡にも使うので、会社で提供されたなどの第三者によって提供されたメールアドレスではなく、転職後も使い続ける自分自身で取得したメールアドレスで登録してください。

    .auth-form-item
      // 名前
      .row
        .col-xs-6
          .auth-form-item
            = f.label :last_name, class: "a-sm-label is-required"
            = f.text_field :last_name, class: "a-sm-text-input", placeholder: "駒形"
        .col-xs-6
          .auth-form-item
            = f.label :first_name, class: "a-sm-label is-required"
            = f.text_field :first_name, class: "a-sm-text-input", placeholder: "真幸"
      - unless user.adviser?
        .auth-form-item__help
          p
            | 就職希望先企業の採用担当者も使う情報になるので、姓・名は必ず本名を（漢字がある場合は漢字で）入力してください。

    .auth-form-item
      = f.label :avatar, class: "a-sm-label is-required"
      .form-item-file-input.js-file-input.a-file-input.is-avatar
        label.js-file-input__preview
          - if f.object.avatar.attached?
            = image_tag f.object.avatar.variant(resize: "100x100>").processed
            p 画像を変更
          - else
            p 画像を選択
          = f.file_field :avatar

      - unless user.adviser?
        .auth-form-item__help
          p 著作権侵害にならない画像を使用してください。画像は正方形に切り抜かれます。

    - unless user.adviser?
      .auth-form-item.is-hidden
        // コース
        = f.label :course_id, class: "a-sm-label is-required"
        .is-button-simple-md-secondary.is-select.is-block
          = f.collection_select :course_id, Course.order(:created_at), :id, :title, {}
        .auth-form-item__help
          p コースの一覧は
            = link_to "こちら", courses_path, trget: "_blank"

      .auth-form-item
        // 現在の職種
        = f.label :job, class: "a-sm-label is-required"
        .is-button-simple-md-secondary.is-select.is-block
          - options = options_for_select(User.jobs.map { |k, v| [t("activerecord.enums.user.job.#{k}"), k] }, selected: f.object.job)
          = f.select :job, options, include_blank: "- 選択してください -"
        .auth-form-item__help
          p 近いものを選択してください。

      .auth-form-item
        // 現在の所属組織
        = f.label :organization, class: "a-sm-label is-required"
        ul
          li

        = f.text_field :organization, class: "a-sm-text-input", autocomplete: :off, placeholder: "XXX大学XXX学部XXX学科XXX専攻"
        - unless user.adviser?
          .auth-form-item__help
            p 会社名・学校名などを入力してください（働いていない場合は「なし」としてください）。
            p この情報は他のフィヨルドブートキャンプ参加者には公開されませんが、就職活動の際に利用する場合があります。

      .auth-form-item
        // 学習に使うOS
        = f.label :os, "学習に使うOS", class: "a-sm-label is-required"
        .is-button-simple-md-secondary.is-select.is-block
          - options = options_for_select(User.os.map { |k, v| [t("activerecord.enums.user.os.#{k}"), k] }, selected: f.object.os)
          = f.select :os, options, include_blank: "- 選択してください -"
        .auth-form-item__help
          p
            | Mac向けのカリキュラムのみなのでWindowsでは受講できません。
            | Macを持ってない方は用意する必要があります。
            | Linux経験者であればLinuxで学習を行っても構いません。
            | 参加登録後にMacを購入する予定の場合は、メンターにどの機種を購入するべきかを相談をした上で購入することをおすすめします。

      .auth-form-item
        // 主な学習場所
        = f.label :study_place, class: "a-sm-label is-required"
        .is-button-simple-md-secondary.is-select.is-block
          - options = options_for_select(User.study_places.map { |k, v| [t("activerecord.enums.user.study_place.#{k}"), k] }, selected: f.object.study_place)
          = f.select :study_place, options, include_blank: "- 選択してください -"
        .auth-form-item__help
          p
            | フィヨルドブートキャンプオフィスに通って学習することができます。
            | 環境が整っており、気軽にメンターに質問できます。
            | オフィスに通って勉強される方の方が卒業率は高くなります。
          p
            | ここで自宅を選択したからと言って、オフィスの利用ができなくなる、ということはありません。
            | 普段は自宅で学習をしていても、用があってオフィスの近くに来たときや。夏休みや正月休みなどの長期休暇の間はオフィスを利用することなども可能です。また、主な学習場所をあとで変更することもできます。

      .auth-form-item
        // プログラミング経験
        = f.label :experience, class: "a-sm-label is-required"
        .is-button-simple-md-secondary.is-select.is-block
          - options = options_for_select(User.experiences.map { |k, v| [t("activerecord.enums.user.experience.#{k}"), k] }, selected: f.object.experience)
          = f.select :experience, options, include_blank: "- 選択してください -"

      .auth-form-item
        // フィヨルドブートキャンプをどこで知りましたか？
        = f.label :how_did_you_know, "フィヨルドブートキャンプをどこで知りましたか？", class: "a-sm-label is-required"
        = f.text_area :how_did_you_know, class: "a-sm-text-input", placeholder: "大学時代の先輩である株式会社XXXXでプログラマをやっているXXXXさんから勧められて。"
        .auth-form-item__help
          p 自分で検索エンジンを使って見つけた場合は、そのときの検索キーワードなども覚えていたら入力してください。誰かに紹介してもらった場合、その誰かもお教えください。
          p この情報は他のフィヨルドブートキャンプ参加者には公開されません。

    .auth-form-item
      ruby:
        if user.adviser?
          placeholder = "株式会社XXXXの開発チームマネージャーのXXXXXです。"
          required_class = ""
          help_text = "この情報は他のフィヨルドブートキャンプ参加者に公開されます。"
        else
          placeholder = "XXXXと申します。月・水・金の 10:00 〜 19:00 に活動します。XXXXと考えたため、プログラマーとして就職することを決意しました。今はXXXXで働いています。XXXXが好きでよくXXXXしています。XXXXが好きな方、仲良くしてください！！"
          required_class = "is-required"
          help_text = "この情報は他のフィヨルドブートキャンプ参加者に公開されます。あとからでも内容を変更することができます。"
        end
      = f.label :description, class: "a-sm-label #{required_class}"
      = f.text_area :description, class: "a-sm-text-input", placeholder: placeholder
      .auth-form-item__help
        p = help_text

    - if from == :edit
      .auth-form-item
        = f.label :slack_account, class: "a-sm-label"
        = f.text_field :slack_account, class: "a-sm-text-input", placeholder: "komagata"
      .auth-form-item
        = f.label :github_account, class: "a-sm-label"
        = f.text_field :github_account, class: "a-sm-text-input", placeholder: "komagata"
        .auth-form-item__help
          p URL ではなく ID を入力。
      .auth-form-item
        = f.label :twitter_account, class: "a-sm-label"
        = f.text_field :twitter_account, class: "a-sm-text-input", placeholder: "komagata"
        .auth-form-item__help
          p URL ではなく アカウント を入力。
      .auth-form-item
        = f.label :facebook_url, class: "a-sm-label"
        = f.text_field :facebook_url, class: "a-sm-text-input", placeholder: "https://www.facebook.com/komagata1111"
        .auth-form-item__help
          p ID ではなく URL を入力。
      .auth-form-item
        = f.label :blog_url, class: "a-sm-label"
        = f.text_field :blog_url, class: "a-sm-text-input", placeholder: "http://docs.komagata.org/"
        .auth-form-item__help
          p URL を入力。
      .auth-form-item
        = f.label :feed_url, class: "a-sm-label"
        = f.text_field :feed_url, class: "a-sm-text-input", placeholder: "http://docs.komagata.org/index.atom"
        .auth-form-item__help
          p URL を入力。
    .auth-form-item
      = f.label :password, class: "a-sm-label is-required"
      = f.password_field :password, class: "a-sm-text-input", autocomplete: :off
    .auth-form-item
      = f.label :password_confirmation, class: "a-sm-label is-required"
      = f.password_field :password_confirmation, class: "a-sm-text-input", autocomplete: :off
      .auth-form-item__help
        p パスワードをもう一度入力
    - if admin_login?
      .auth-form-item
        = f.label :graduated_on, class: "a-sm-label"
        = f.text_field :graduated_on, class: "datepicker a-text-input"
      .auth-form-item
        = f.label :adviser, class: "a-sm-label"
        ul.auth-form-item__checkboxes
          li.auth-form-checkbox
            label.auth-form-checkbox__label
              = f.check_box :adviser, class: "auth-form-checkbox__input"
              = User.human_attribute_name :adviser
      .auth-form-item
        = f.label :free, class: "a-sm-label"
        ul.auth-form-item__checkboxes
          li.auth-form-checkbox
            label.auth-form-checkbox__label
              = f.check_box :free, class: "auth-form-checkbox__input"
              = User.human_attribute_name :free
      .auth-form-item
        = f.label :trainee, class: "a-sm-label"
        ul.auth-form-item__checkboxes
          li.auth-form-checkbox
            label.auth-form-checkbox__label
              = f.check_box :trainee, class: "auth-form-checkbox__input"
              = User.human_attribute_name :trainee
      .auth-form-item
        = f.label :retired_on, class: "a-sm-label"
        = f.text_field :retired_on, class: "datepicker a-text-input"
    - if from == :new
      .auth-form-item
        label.a-sm-label
          | 秘密保持契約
        ul.auth-form-item__checkboxes
          li.auth-form-checkbox
            label.auth-form-checkbox__label.js-nda-action.js-modal(data-target="#nda-modal")
              | 秘密保持契約に同意する

  .auth-form-action.is-sign-up-action
    ul.auth-form-action__items
      li.auth-form-action__item
        = link_to "キャンセル", :back, class: "is-button-simple-xs-secondary"
      li.auth-form-action__item
        = f.submit user_submit_label(user, from), class: "is-button-simple-md-warning js-sign-up-action"

  = render "users/nda_modal", f: f
