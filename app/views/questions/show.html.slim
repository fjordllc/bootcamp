- title @question.title
header.page-header
  .container
    .page-header__container
      h2.page-header__title
        | Q&A
      = link_to new_question_path, class: "is-button-standard-md-warning" do
        i.fa.fa-plus
        | 新規質問

.page-body
  .container
    .thread
      .thread__inner
        header.thread__header
          h1.thread__title
            = @question.title
        .thread__meta
          .thread__author-name
            = @question.user.login_name
          time.thread__created-at(datetime="#{@question.created_at.to_datetime}" pubdate="pubdate")
            = l @question.updated_at, format: :date_long_with_time
        .thread__description.js-markdown-view.js-target-blank.is-long-text-style.js-markdown
          = @question.description
        footer.thread__body-footer
          .thread__body-footer-container
            - if @question.user_id == current_user.id
              .thread__actions
                ul.thread__actions-items
                  li.thread__actions-item
                    = link_to edit_question_path(@question), class: 'thread__actions-item-link is-success' do
                      i.fa.fa-pencil
                  li.thread__actions-item
                    = link_to question_path(@question), data: { confirm: t('are_you_sure') }, method: :delete, class: 'thread__actions-item-link is-danger' do
                      i.fa.fa-trash-o
            = link_to questions_path, class: 'is-button-standard-sm-secondary' do
              i.fa.fa-angle-left
              = t('to_index_of_questions')
      = link_to @question.user, itempro: "url", class: "thread__author-link" do
        = gravatar_tag @question.user, secure: true, size: 120, html: { class: "thread__author-icon"}
    .thread-comments-container
      h3.thread-comments-container__title
        | 回答・コメント
      - if @question.present?
        = render partial: "answers/answer", collection: @question.answers.order("updated_at"), as: :answer
      - else
        p 回答がありません

      = render 'answers/form', question: @question, answer: Answer.new
